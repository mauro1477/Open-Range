{% extends "base.twig" %}

{% block content %}
	<div class="content-wrapper">
		<article class="post-type-{{ post.post_type }}" id="post-{{ post.ID }}">
			<img src="{{ post.thumbnail.src|resize(1200, 300) }}">
			<section class="article-content">
				<h1 class="article-h1">Guide: {{ post.title }}</h1>
				<div class="article-body">
					{{ post.content }}
					{% if post.meta('guides_location')["address"] %}
						<p>Address: {{ post.meta('guides_location')["address"]  }}</p>
					{% endif %}

					{% if post.meta('registration') %}
						<p>Registration:  {{ post.meta('registration') }}</p>
					{% endif %}	
					
					{% if post.meta('phone') %}
						<p>Phone: {{ post.meta('phone') }}</p>
					{% endif %}


					{% if post.meta('hunt_units') %}
						<p>Hunt Units: {{ post.meta('hunt_units') }}</p>
					{% else %}
						<p>No Hunt Units Listed</p>
					{% endif %}

					{% if post.meta('website')%}
						<a href="{{ post.meta('website')}} " target="_blank" rel="noopener noreferrer">{{post.meta('website')}}</a>
					{% endif %}

					{% if post.meta('openedrange_verified') == true %}
						<p>OpenedRange Verified: Yes</p>
					{% else %}
						<p>OpenedRange Verified: No</p>
					{% endif %}

				    {% if post.meta('guides_location')["address"] %}
						<div id="map"></div>
						<script>
							let _lat = {{post.meta('guides_location')['lat']}};
							var _lng = {{post.meta('guides_location')['lng']}};

							let map;

							function initMap() {
							const mapOptions = {
								zoom: 8,
								center: { lat: _lat, lng: _lng },
							};

							map = new google.maps.Map(document.getElementById("map"), mapOptions);

							const marker = new google.maps.Marker({
								// The below line is equivalent to writing:
								// position: new google.maps.LatLng(-34.397, 150.644)
								position: { lat: _lat, lng: _lng },
								map: map,
							});
							// You can use a LatLng literal in place of a google.maps.LatLng object when
							// creating the Marker object. Once the Marker object is instantiated, its
							// position will be available as a google.maps.LatLng object. In this case,
							// we retrieve the marker's position using the
							// google.maps.LatLng.getPosition() method.
							const infowindow = new google.maps.InfoWindow({
								content: "<p>Marker Location:" + marker.getPosition() + "</p>",
							});

							google.maps.event.addListener(marker, "click", () => {
								infowindow.open(map, marker);
							});
							}

							window.initMap = initMap;
						</script>
					{% endif %}
				</div>
			</section>

			{# <!-- comment box -->
			<section class="comment-box">
				<!-- comments -->
				<div class="comments">
				    {% if post.comments %}
					<h3> comments </h3>
					{% for cmt in post.comments %}
					    {% include "comment.twig" with {comment:cmt} %}
					{% endfor %}
				    {% endif %}
				</div>

				{% if post.comment_status == "closed" %}
					<p> comments for this post are closed </p>
				{% else %}
				    <!-- comment form -->
				    {% include "comment-form.twig" %}
				{% endif %}
			</section> #}
		</article>
	</div><!-- /content-wrapper -->
{% endblock %}
